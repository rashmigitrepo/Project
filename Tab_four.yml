---
- name: Tab Four
  hosts: your_target_hosts
  gather_facts: yes
  become: yes

  tasks:
- name: 4.1.3.7 Ensure unsuccessful file access attempts are collected (Automated)
  block:
    - name: 4.1.3.7 Ensure unsuccessful file access attempts are collected (Automated) | Get UID_MIN from login.defs
      shell: awk '/^\s*UID_MIN/{print $2}' /etc/login.defs
      register: UID_MIN
      changed_when: false
    - name: 4.1.3.7 Ensure unsuccessful file access attempts are collected (Automated) | Create or Edit Audit Rules File
      template:
        src: template_4_1_3_7.j2
        dest: /etc/audit/rules.d/50-access.rules
        #owner: root
        #group: root
        #mode: '0640'
      when: UID_MIN.stdout is defined
    - name: 4.1.3.7 Ensure unsuccessful file access attempts are collected (Automated) | Load Audit Rules
      shell: augenrules --load
    - name: 4.1.3.7 Ensure unsuccessful file access attempts are collected (Automated) | Check Reboot Requirement
      shell: if [[ $(auditctl -s | grep "enabled") =~ "2" ]]; then printf "Reboot required to load rules.\n"; fi
      register: reboot_required
      changed_when: false
    - name: 4.1.3.7 Ensure unsuccessful file access attempts are collected (Automated) | Display Reboot Requirement
      debug:
        msg: "Reboot required to load rules.\n"
      when: reboot_required.stdout == "Reboot required to load rules.\n"

      

- name: 4.1.3.8 Ensure events that modify user/group information are collected (Automated)
  block:
    - name: 4.1.3.8 Ensure events that modify user/group information are collected (Automated) | Create or Edit Audit Rules File
      template:
        src: template_4_1_3_8.j2
        dest: /etc/audit/rules.d/50-identity.rules
        #owner: root
        #group: root
        #mode: '0640'
    - name: 4.1.3.8 Ensure events that modify user/group information are collected (Automated) | Load Audit Rules
      shell: augenrules --load
    - name: 4.1.3.8 Ensure events that modify user/group information are collected (Automated) | Check Reboot Requirement
      shell: if [[ $(auditctl -s | grep "enabled") =~ "2" ]]; then printf "Reboot required to load rules.\n"; fi
      register: reboot_required
      changed_when: false
    - name: 4.1.3.8 Ensure events that modify user/group information are collected (Automated) | Display Reboot Requirement
      debug:
        msg: "Reboot required to load rules.\n"
      when: reboot_required.stdout == "Reboot required to load rules.\n"



- name: 4.1.3.9_to_10 Ensure discretionary access control permission modification events | Ensure successful file system mounts are collected (Automated)
  block:
    - name: 4.1.3.9_to_10 Ensure discretionary access control and file system mounts events are collected (Automated) | Get UID_MIN from login.defs
      shell: awk '/^\s*UID_MIN/{print $2}' /etc/login.defs
      register: UID_MIN 
      changed_when: false
    - name: 4.1.3.9_to_10 Ensure discretionary access control and file system mounts events are collected (Automated) | Create Audit Rules File
      template:
        src: template_4_1_3_9_to_10.j2
        dest: /etc/audit/rules.d/50-perm_mod.rules
        #owner: root
        #group: root
        #mode: '0640'
      when: UID_MIN.stdout is defined
    - name: 4.1.3.9_to_10 Ensure discretionary access control and file system mounts events are collected (Automated) | Load Audit Rules
      shell: augenrules --load
    - name: 4.1.3.9_to_10 Ensure discretionary access control and file system mounts events are collected (Automated) | Check Reboot Requirement
      shell: if [[ $(auditctl -s | grep "enabled") =~ "2" ]]; then printf "Reboot required to load rules.\n"; fi
      register: reboot_required
      changed_when: false
    - name: 4.1.3.9_to_10 Ensure discretionary access control and file system mounts events are collected (Automated) | Display Reboot Requirement
      debug:
        msg: "Reboot required to load rules.\n"
      when: reboot_required.stdout == "Reboot required to load rules.\n"

      

- name: 4.1.3.11 Ensure session initiation information is collected (Automated)
  block:
    - name: 4.1.3.11 Ensure session initiation information is collected (Automated) | Create or Edit Audit Rules File
      template:
        src: template_4_1_3_11.j2
        dest: /etc/audit/rules.d/50-session.rules
        #owner: root
        #group: root
        #mode: '0640'
    - name: 4.1.3.11 Ensure session initiation information is collected (Automated) | Load Audit Rules
      shell: augenrules --load
    - name: 4.1.3.11 Ensure session initiation information is collected (Automated) | Check Reboot Requirement
      shell: if [[ $(auditctl -s | grep "enabled") =~ "2" ]]; then printf "Reboot required to load rules.\n"; fi
      register: reboot_required
      changed_when: false
    - name: 4.1.3.11 Ensure session initiation information is collected (Automated) | Display Reboot Requirement
      debug:
        msg: "Reboot required to load rules.\n"
      when: reboot_required.stdout == "Reboot required to load rules.\n"



- name: 4.1.3.12 Ensure login and logout events are collected (Automated)
  block:
    - name: 4.1.3.12 Ensure login and logout events are collected (Automated) | Create or Edit Audit Rules File
      template:
        src: template_4_1_3_12.j2
        dest: /etc/audit/rules.d/50-login.rules
        #owner: root
        #group: root
        #mode: '0640'
    - name: 4.1.3.12 Ensure login and logout events are collected (Automated) | Load Audit Rules
      shell: augenrules --load
    - name: 4.1.3.12 Ensure login and logout events are collected (Automated) | Check Reboot Requirement
      shell: if [[ $(auditctl -s | grep "enabled") =~ "2" ]]; then printf "Reboot required to load rules.\n"; fi
      register: reboot_required
      changed_when: false
    - name: 4.1.3.12 Ensure login and logout events are collected (Automated) | Display Reboot Requirement
      debug:
        msg: "Reboot required to load rules.\n"
      when: reboot_required.stdout == "Reboot required to load rules.\n"


   
