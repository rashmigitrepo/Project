---
- name: Tab Four
  hosts: your_target_hosts
  gather_facts: yes
  become: yes

  tasks:
- name: 4.1.3.7_9_to_10_13_15_to_19 Ensure attempts/events/mounts are collected (Automated)
  block:
    - name: 4.1.3.7_9_to_10_13_15_to_19 Ensure attempts/events/mounts are collected (Automated) | Get UID_MIN from login.defs
      shell: awk '/^\s*UID_MIN/{print $2}' /etc/login.defs
      register: UID_MIN
      changed_when: false
      
    - name: 4.1.3.7_9_to_10_13_15_to_19 Ensure attempts/events/mounts are collected (Automated) | Create or Edit Audit Rules File
      template:
        src: '{{ item.src }}'
        dest: '{{ item.dest }}'
        #owner: root
        #group: root
        #mode: '0640'
      loop:
        - { src: 'template_4_1_3_7.j2', dest: '/etc/audit/rules.d/50-access.rules' }
        - { src: 'template_4_1_3_9_to_10.j2', dest: '/etc/audit/rules.d/50-perm_mod.rules' }
        - { src: 'template_4_1_3_13.j2', dest: '/etc/audit/rules.d/50-delete.rules' }
        - { src: 'template_4_1_3_15_&_17.j2', dest: '/etc/audit/rules.d/50-perm_chng.rules' }
        - { src: 'template_4_1_3_16.j2', dest: '/etc/audit/rules.d/50-priv_cmd.rules' }
        - { src: 'template_4_1_3_18.j2', dest: '/etc/audit/rules.d/50-usermod.rules' }
        - { src: 'template_4_1_3_19.j2', dest: '/etc/audit/rules.d/50-kernel_modules.rules' }
      when: UID_MIN.stdout is defined
      
    - name: 4.1.3.7_9_to_10_13_15_to_19 Ensure attempts/events/mounts are collected (Automated) | Load Audit Rules
      shell: augenrules --load
      
    - name: 4.1.3.7_9_to_10_13_15_to_19 Ensure attempts/events/mounts are collected (Automated) | Check Reboot Requirement
      shell: if [[ $(auditctl -s | grep "enabled") =~ "2" ]]; then printf "Reboot required to load rules.\n"; fi
      register: reboot_required
      changed_when: false
      
    - name: 4.1.3.7_9_to_10_13_15_to_19 Ensure attempts/events/mounts are collected (Automated) | Display Reboot Requirement
      debug:
        msg: "Reboot required to load rules.\n"
      when: reboot_required.stdout == "Reboot required to load rules.\n"

